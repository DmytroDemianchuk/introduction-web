{"ast":null,"code":"class SocketConnection {\n  constructor() {\n    this.connect = cb => {\n      console.log('connecting', this.socket.url);\n      this.socket.onopen = () => {\n        console.log('Successfully Connected!');\n      };\n      this.socket.onmessage = msg => {\n        cb(msg);\n      };\n      this.socket.onclose = event => {\n        console.log('Socket Closed Connection: ', event);\n      };\n      this.socket.onerror = error => {\n        console.log('Socket Error: ', error);\n      };\n    };\n    this.sendMsg = msg => {\n      // send object as string\n      console.log(msg);\n      this.socket.send(JSON.stringify(msg));\n    };\n    this.connected = user => {\n      this.socket.onopen = () => {\n        console.log('Successfully Connected', user);\n        // initiate mapping\n        this.mapConnection(user);\n      };\n    };\n    this.mapConnection = user => {\n      console.log('mapping', user);\n      this.socket.send(JSON.stringify({\n        type: 'bootup',\n        user: user\n      }));\n    };\n    this.socket = new WebSocket(`ws://localhost:8081/ws`);\n  }\n}\nexport default SocketConnection;","map":{"version":3,"names":["SocketConnection","constructor","connect","cb","console","log","socket","url","onopen","onmessage","msg","onclose","event","onerror","error","sendMsg","send","JSON","stringify","connected","user","mapConnection","type","WebSocket"],"sources":["/Users/apple/Desktop/it/github/introduction-web/client/src/socket-connection.js"],"sourcesContent":["class SocketConnection {\n    constructor() {\n      this.socket = new WebSocket(`ws://localhost:8081/ws`);\n    }\n  \n    connect = cb => {\n      console.log('connecting', this.socket.url);\n  \n      this.socket.onopen = () => {\n        console.log('Successfully Connected!');\n      };\n  \n      this.socket.onmessage = msg => {\n        cb(msg);\n      };\n  \n      this.socket.onclose = event => {\n        console.log('Socket Closed Connection: ', event);\n      };\n  \n      this.socket.onerror = error => {\n        console.log('Socket Error: ', error);\n      };\n    };\n  \n    sendMsg = msg => {\n      // send object as string\n      console.log(msg);\n      this.socket.send(JSON.stringify(msg));\n    };\n  \n    connected = user => {\n      this.socket.onopen = () => {\n        console.log('Successfully Connected', user);\n        // initiate mapping\n        this.mapConnection(user);\n      };\n    };\n  \n    mapConnection = user => {\n      console.log('mapping', user);\n      this.socket.send(JSON.stringify({ type: 'bootup', user: user }));\n    };\n  }\n  \n  export default SocketConnection;\n  "],"mappings":"AAAA,MAAMA,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IAAA,KAIdC,OAAO,GAAGC,EAAE,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC;MAE1C,IAAI,CAACD,MAAM,CAACE,MAAM,GAAG,MAAM;QACzBJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC;MAED,IAAI,CAACC,MAAM,CAACG,SAAS,GAAGC,GAAG,IAAI;QAC7BP,EAAE,CAACO,GAAG,CAAC;MACT,CAAC;MAED,IAAI,CAACJ,MAAM,CAACK,OAAO,GAAGC,KAAK,IAAI;QAC7BR,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,KAAK,CAAC;MAClD,CAAC;MAED,IAAI,CAACN,MAAM,CAACO,OAAO,GAAGC,KAAK,IAAI;QAC7BV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,KAAK,CAAC;MACtC,CAAC;IACH,CAAC;IAAA,KAEDC,OAAO,GAAGL,GAAG,IAAI;MACf;MACAN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChB,IAAI,CAACJ,MAAM,CAACU,IAAI,CAACC,IAAI,CAACC,SAAS,CAACR,GAAG,CAAC,CAAC;IACvC,CAAC;IAAA,KAEDS,SAAS,GAAGC,IAAI,IAAI;MAClB,IAAI,CAACd,MAAM,CAACE,MAAM,GAAG,MAAM;QACzBJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEe,IAAI,CAAC;QAC3C;QACA,IAAI,CAACC,aAAa,CAACD,IAAI,CAAC;MAC1B,CAAC;IACH,CAAC;IAAA,KAEDC,aAAa,GAAGD,IAAI,IAAI;MACtBhB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEe,IAAI,CAAC;MAC5B,IAAI,CAACd,MAAM,CAACU,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEI,IAAI,EAAE,QAAQ;QAAEF,IAAI,EAAEA;MAAK,CAAC,CAAC,CAAC;IAClE,CAAC;IAxCC,IAAI,CAACd,MAAM,GAAG,IAAIiB,SAAS,CAAE,wBAAuB,CAAC;EACvD;AAwCF;AAEA,eAAevB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}